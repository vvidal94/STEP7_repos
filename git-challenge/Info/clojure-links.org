* HowTo
** Using [[https://github.com/Chouser/clojure-jna][Native C libs from Clojure]].
** Transducers 
   + https://funcool.github.io/clojurescript-unraveled/
   + http://jr0cket.co.uk/2016/06/transducers-in-clojure-getting-started.html
   + http://bendyworks.com/transducers-clojures-next-big-idea/

** [[http://swannodette.github.io/2015/01/12/lazy-contracts/][Lazy Contracts]]
** Fast Clojure Web applications through [[http://blog.paralleluniverse.co/2015/01/22/comsat-ring/][Comsat]].
** Refactoring [[http://adambard.com/blog/refactoring-refactored/][refactored]]
* Blogs
** [[http://swannodette.github.io/][David Nolen]]
** [[http://adambard.com/blog/][Adam Bard]]
** [[http://timothypratley.blogspot.com/][Timothy Pratley]]
* Documentation
** [[http://clojure.org/cheatsheet][CheatSheet]]

** Clojure Grimoire http://grimoire.arrdem.com/
** Destructuring Tutorial and Cheat Sheet http://john2x.com/blog/clojure-destructuring/
* Learning Resources
** [[http://www.braveclojure.com/][Clojure for the Brave and True]]
** [[http://www.longstorm.org/weekly/cito/1/][Clojure in the Open]]
** [[https://github.com/marcuscreo/clojure-learning-resources][Clojure Learning Resources]]
** [[http://adambard.com/blog/greatest-clojure-hits/][Clojure Intro Articles]]
** http://corgibytes.com/blog/2017/01/03/clojure-journey/
* Articles
** Clojure with Purnam and AngularJS
   http://ciwchris.github.io/blog/using-purnam-with-angular-part-1.html
** Real-World Clojure http://dev.solita.fi/2014/04/01/real-world-clojure.html
   Useful practical issues, including thoughts on Korma

   Interesting libraries references
   1. https://github.com/stuartsierra/component
   2. https://github.com/prismatic/schema
   3. http://http-kit.org/

** Clojure, Python [[http://www.digitalcld.com/cld/recommended-reading-comparisons-of-python-and-clojure/][transition]]
* Talks
** Rich Hickey [[http://www.infoq.com/presentations/Simple-Made-Easy][Simple Made Easy]]
** [[https://www.youtube.com/user/ClojureTV][Clojure TV]] YouTube Channel, lots of great stuff
* Examples and Exercises
** [[https://github.com/clojurebook/ClojureProgramming][Clojure Programming]] Book Source
** [[https://github.com/functional-koans/clojure-koans][Clojure Koans]]
* Tools
** [[http://boot-clj.com/][boot-clj]] Build Utility ([[https://github.com/boot-clj][docs]]) Build Utility
* Libraries
** [[http://maths.uncommons.org/][Uncommon Maths]] Java library with good, modern PRNGs, distributions, combinatorics, etc. ([[https://github.com/dwdyer/uncommons-maths][source]] on github)
** [[http://neanderthal.uncomplicate.org/][Neanderthal]] for fast BLAS/LAPACK matrix algebra
** [[https://github.com/cldwalker/table][table]] -- create tables for almost any data structure, including :org style (see also clojure.pprint/pprint-table, which seems less flexible)
** [[https://github.com/clojure/tools.cli][tools.cli]] and [[https://github.com/boot-clj/boot][boot]] for handline command line arguments
** [[https://github.com/Raynes/conch][conch]] for shell programs like clojure functions
** [[https://github.com/clojure/core.typed][core.typed]]
** [[http://yomguithereal.github.io/clj-fuzzy/clojure.html][Fuzzy Strings and Phonetics]]
** Dissassembly: Library [[https://github.com/gtrak/no.disassemble][no.disassemble]]  (see [[https://www.youtube.com/watch?v%3DiQwQXVM6oiY][Zach Tellman's talk on predictably fast clojure]]).
** Benchmarking: Library [[https://github.com/hugoduncan/criterium][criterium]]
** Compiler analysis: Library [[https://github.com/clojure/tools.analyzer][tools.analyzer]]
** Clojure in the Open http://www.longstorm.org/weekly/cito/1/
** Clojure Learning Resources  https://github.com/marcuscreo/clojure-learning-resources
** Clojure Distilled (nice summary) http://yogthos.github.io/ClojureDistilled.html
** ClojureScript and React.js http://murilopereira.com/the-case-for-reactjs-and-clojurescript/#/89
** ClojureScript 101 http://swannodette.github.io/2013/11/07/clojurescript-101/
** Clojure Worflow Reloaded http://thinkrelevance.com/blog/2013/06/04/clojure-workflow-reloaded
** Casting Spels in Clojure http://www.lisperati.com/clojure-spels/casting.html
** Testing workflow http://eigenhombre.com/clojure/2014/07/20/testing-continuously/
** Stuart Sierra's [[https://github.com/stuartsierra/component][Component]] library
* Web Frameworks
** Seesqw https://github.com/daveray/seesaw  (for swing)
** Reagent (and React) http://holmsand.github.io/reagent/
** Om https://github.com/swannodette/om/wiki/Basic-Tutorial
** Rafael for Charts http://feathers.io/blog/2014/10/using-clojurescript-to-make-charts-with-raphael/
** Monads https://github.com/clojure/algo.monads
** [[http://timothypratley.blogspot.com/2015/07/you-should-be-using-figwheelreagent.html][Figwheel + Reagant]]
